services:
  concourse-db:
    image: postgres
    platform: linux/amd64
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "concourse"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: concourse
      POSTGRES_USER: concourse
      POSTGRES_PASSWORD: changeme
    ports:
      - "5432:5432"

  concourse-web:
    image: concourse/concourse
    platform: linux/amd64
    restart: always
    command: web
    depends_on:
      - concourse-db
    ports:
      - "8080:8080"
      - "2222:2222"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      CONCOURSE_POSTGRES_HOST: concourse-db
      CONCOURSE_POSTGRES_USER: concourse
      CONCOURSE_POSTGRES_PASSWORD: changeme
      CONCOURSE_POSTGRES_DATABASE: concourse
      CONCOURSE_EXTERNAL_URL: http://localhost:8080
      CONCOURSE_ADD_LOCAL_USER: test:test
      CONCOURSE_MAIN_TEAM_LOCAL_USER: test
      CONCOURSE_TSA_HOST_KEY: /concourse-keys/tsa_host_key
      CONCOURSE_TSA_AUTHORIZED_KEYS: /concourse-keys/worker_key.pub
      CONCOURSE_SESSION_SIGNING_KEY: /concourse-keys/session_signing_key
      CONCOURSE_WORKER_KEY: /concourse-keys/worker_key
    volumes:
      - ./keys:/concourse-keys
      - .:/app
    working_dir: /app
  concourse-worker:
    image: concourse/concourse
    platform: linux/amd64
    privileged: true
    depends_on:
      concourse-web:
        condition: service_healthy
    command: worker
    environment:
      CONCOURSE_TSA_HOST: concourse-web:2222
      CONCOURSE_TSA_PUBLIC_KEY: /concourse-keys/tsa_host_key.pub
      CONCOURSE_WORKER_PRIVATE_KEY: /concourse-keys/worker_key
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./keys:/concourse-keys
    security_opt:
      - seccomp=unconfined
    extra_hosts:
      - "concourse-web:172.18.0.3"